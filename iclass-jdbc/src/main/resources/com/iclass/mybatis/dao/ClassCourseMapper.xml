<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iclass.mybatis.dao.ClassCourseMapper" >
  <resultMap id="BaseResultMap" type="com.iclass.mybatis.po.ClassCourse" >
    <constructor >
      <idArg column="ClassCourseID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ClassCode" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CourseCode" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CreateTime" jdbcType="DATE" javaType="java.lang.String" />
      <arg column="DeadLine" jdbcType="DATE" javaType="java.lang.String" />
      <arg column="Status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    ClassCourseID, ClassCode, CourseCode, CreateTime, DeadLine, Status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from class_course
    where ClassCourseID = #{classcourseid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from class_course
    where ClassCourseID = #{classcourseid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iclass.mybatis.po.ClassCourse" useGeneratedKeys="true" keyProperty="classcourseid">
    insert into class_course (ClassCourseID, ClassCode, CourseCode,
      CreateTime, DeadLine, Status
      )
    values (#{classcourseid,jdbcType=INTEGER}, #{classcode,jdbcType=VARCHAR}, #{coursecode,jdbcType=VARCHAR},
      #{createtime,jdbcType=DATE}, #{deadline,jdbcType=DATE}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iclass.mybatis.po.ClassCourse" >
    insert into class_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classcourseid != null" >
        ClassCourseID,
      </if>
      <if test="classcode != null" >
        ClassCode,
      </if>
      <if test="coursecode != null" >
        CourseCode,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="deadline != null" >
        DeadLine,
      </if>
      <if test="status != null" >
        Status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classcourseid != null" >
        #{classcourseid,jdbcType=INTEGER},
      </if>
      <if test="classcode != null" >
        #{classcode,jdbcType=VARCHAR},
      </if>
      <if test="coursecode != null" >
        #{coursecode,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iclass.mybatis.po.ClassCourse" >
    update class_course
    <set >
      <if test="classcode != null" >
        ClassCode = #{classcode,jdbcType=VARCHAR},
      </if>
      <if test="coursecode != null" >
        CourseCode = #{coursecode,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="deadline != null" >
        DeadLine = #{deadline,jdbcType=DATE},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where ClassCourseID = #{classcourseid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iclass.mybatis.po.ClassCourse" >
    update class_course
    set ClassCode = #{classcode,jdbcType=VARCHAR},
      CourseCode = #{coursecode,jdbcType=VARCHAR},
      CreateTime = #{createtime,jdbcType=DATE},
      DeadLine = #{deadline,jdbcType=DATE},
      Status = #{status,jdbcType=INTEGER}
    where ClassCourseID = #{classcourseid,jdbcType=INTEGER}
  </update>
  <select id="selectByClassCode" parameterType="java.lang.String" resultType="com.iclass.mybatis.po.ClassCourse">
    SELECT
    <include refid="Base_Column_List"/>
    FROM class_course
    where ClassCode = #{classcode,jdbcType=VARCHAR}
  </select>
  <select id="selectByCourseCode" parameterType="java.lang.String" resultType="com.iclass.mybatis.po.ClassCourse">
    SELECT
    <include refid="Base_Column_List"/>
    FROM class_course
    where CourseCode = #{coursecode,jdbcType=VARCHAR} AND status = 1
  </select>
  <select id="selectByClassCodeAndCourseCode" parameterType="java.lang.String" resultType="com.iclass.mybatis.po.ClassCourse">
    SELECT
    <include refid="Base_Column_List"/>
    FROM class_course
    where ClassCode = #{classcode,jdbcType=VARCHAR} AND CourseCode = #{coursecode,jdbcType=VARCHAR}
  </select>

  <select id="selectUnselectedClassCourse" resultType="com.iclass.mybatis.po.ClassCourse">
    select
    <include refid="Base_Column_List"/>
    FROM class_course
    where
    Status = 1
    AND
    ClassCourseID
    NOT IN
    (
      SELECT ClassCourseID
      FROM class_course_student
      WHERE StudentCode = #{studentcode}
    )
    AND ClassCourseID IN
    (
      SELECT ClassCourseID FROM class_course WHERE ClassCode =
        (
          SELECT ClassCode
          FROM student_class
          WHERE
          StudentCode = #{studentcode}
        )
    )
  </select>

  <select id="selectByClassCreator" resultType="com.iclass.mybatis.po.ClassCourse" >
    SELECT
    <include refid="Base_Column_List"/>
    FROM class_course
    WHERE ClassCode IN
    (
      select ClassCode from class where ClassCreator = #{classcreator}
    )
    limit #{start}, #{length}
  </select>

  <select id="selectByClassCreatorNoLimit" resultType="com.iclass.mybatis.po.ClassCourse" >
    SELECT
    <include refid="Base_Column_List"/>
    FROM class_course
    WHERE ClassCode IN
    (
      select ClassCode from class where ClassCreator = #{classcreator}
    )
  </select>

  <select id="countByClassCreator" resultType="java.lang.Integer" >
    SELECT
    COUNT(*)
    FROM class_course
    WHERE ClassCode IN
    (
      select ClassCode from class where ClassCreator = #{classcreator}
    )
  </select>

  <select id="countAll" resultType="java.lang.Integer" >
    SELECT
    count(*)
    FROM class_course
  </select>
</mapper>