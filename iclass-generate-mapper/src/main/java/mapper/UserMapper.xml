<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iclass.user.mybatis.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.iclass.user.mybatis.model.User" >
    <constructor >
      <idArg column="UserID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="UserCode" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UserName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UserFullName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UserSex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UserPassword" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UserBirth" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UserEmail" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UserPhoneNum" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UserRole" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    UserID, UserCode, UserName, UserFullName, UserSex, UserPassword, UserBirth, UserEmail, 
    UserPhoneNum, UserRole
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where UserID = #{userid,jdbcType=INTEGER}
  </select>
  <select id="findByUsername" resultType="java.lang.String" parameterType="java.lang.String" >
    select
    userrole
    from USER
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="findByUsercode" resultType="java.lang.String" parameterType="java.lang.String" >
    select
    userrole
    from USER
    where usercode = #{usercode,jdbcType=VARCHAR}
  </select>
  <select id="findByUsernameAndPassword" parameterType="java.lang.String" resultType="java.lang.String">
    select
    userrole
    from USER
    where username = #{username} and userpassword = #{password}
  </select>
  <select id="findByUsercodeAndPassword" parameterType="String" resultType="String">
    select
    userrole
    from USER
    where usercode = #{usercode} and userpassword = #{password}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where UserID = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iclass.user.mybatis.model.User" >
    insert into user (UserID, UserCode, UserName, 
      UserFullName, UserSex, UserPassword, 
      UserBirth, UserEmail, UserPhoneNum, 
      UserRole)
    values (#{userid,jdbcType=INTEGER}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{userfullname,jdbcType=VARCHAR}, #{usersex,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, 
      #{userbirth,jdbcType=VARCHAR}, #{useremail,jdbcType=VARCHAR}, #{userphonenum,jdbcType=VARCHAR}, 
      #{userrole,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iclass.user.mybatis.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        UserID,
      </if>
      <if test="usercode != null" >
        UserCode,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="userfullname != null" >
        UserFullName,
      </if>
      <if test="usersex != null" >
        UserSex,
      </if>
      <if test="userpassword != null" >
        UserPassword,
      </if>
      <if test="userbirth != null" >
        UserBirth,
      </if>
      <if test="useremail != null" >
        UserEmail,
      </if>
      <if test="userphonenum != null" >
        UserPhoneNum,
      </if>
      <if test="userrole != null" >
        UserRole,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="usercode != null" >
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userfullname != null" >
        #{userfullname,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userbirth != null" >
        #{userbirth,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userphonenum != null" >
        #{userphonenum,jdbcType=VARCHAR},
      </if>
      <if test="userrole != null" >
        #{userrole,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iclass.user.mybatis.model.User" >
    update user
    <set >
      <if test="usercode != null" >
        UserCode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userfullname != null" >
        UserFullName = #{userfullname,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        UserSex = #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        UserPassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userbirth != null" >
        UserBirth = #{userbirth,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        UserEmail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userphonenum != null" >
        UserPhoneNum = #{userphonenum,jdbcType=VARCHAR},
      </if>
      <if test="userrole != null" >
        UserRole = #{userrole,jdbcType=VARCHAR},
      </if>
    </set>
    where UserID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iclass.user.mybatis.model.User" >
    update user
    set UserCode = #{usercode,jdbcType=VARCHAR},
      UserName = #{username,jdbcType=VARCHAR},
      UserFullName = #{userfullname,jdbcType=VARCHAR},
      UserSex = #{usersex,jdbcType=VARCHAR},
      UserPassword = #{userpassword,jdbcType=VARCHAR},
      UserBirth = #{userbirth,jdbcType=VARCHAR},
      UserEmail = #{useremail,jdbcType=VARCHAR},
      UserPhoneNum = #{userphonenum,jdbcType=VARCHAR},
      UserRole = #{userrole,jdbcType=VARCHAR}
    where UserID = #{userid,jdbcType=INTEGER}
  </update>
</mapper>